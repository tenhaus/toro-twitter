<?xml version="1.0" encoding="utf-8"?>
<mx:Box xmlns:mx="http://www.adobe.com/2006/mxml"
		   xmlns:flexlib="http://code.google.com/p/flexlib/">
		   
	
	<mx:Script>
		<![CDATA[
			import mx.events.ItemClickEvent;
			import mx.events.ListEvent;
			import mx.automation.events.ListItemSelectEvent;
			import mx.containers.VBox;
			import mx.utils.ObjectUtil;
			import mx.controls.Image;
			import flexlib.controls.CanvasButton;
			import mx.controls.Button;
			import twitter.api.data.TwitterUser;
			import mx.collections.ArrayCollection;
			
			public static const FRIEND_COMMENTS_REQUESTED : String = "friend_comments_requested";

			[Bindable]
			public var selectedFriendsComments : ArrayCollection;
			
			[Bindable]
			public var selectedFriend : TwitterUser;			
			
			[Bindable]
			private var _friends : ArrayCollection = new ArrayCollection();
			
			[Bindable]
			private var _followers : ArrayCollection = new ArrayCollection();
			
			[Bindable]
			private var _showingFriends : Boolean = true;
			
			public function set friends( value : ArrayCollection ) : void
			{
				_friends = value;
				
				if( _friends ) 
				{
					b_friends.label = "Friends(" + _friends.length + ")";					
				}
				else
				{
					b_friends.label = "Friends(0)";
				}
				
			}
			
			public function set followers( value : ArrayCollection ) : void
			{				
				_followers = value;
				
				if( _followers ) 
				{
					b_followers.label = "Followers(" + _followers.length + ")";					
				}
				else
				{
					b_followers.label = "Followers(0)";
				}
			}
			
			private function handleFriendClick( event : ListEvent ) : void
			{
				selectedFriend = _friends.getItemAt( event.rowIndex ) as TwitterUser;
				dispatchEvent( new Event( FRIEND_COMMENTS_REQUESTED ) );
			}
			
			private function filterData( event : Event ) : void 
			{
	            _friends.filterFunction = filterFunction;
	            _friends.refresh();
	            	
	            _followers.filterFunction = filterFunction;	            	
	            _followers.refresh();	              
        	}
        	
        	private function filterFunction( item : Object ) : Boolean 
        	{
        		var user : TwitterUser = item as TwitterUser;
        		
        		if( user.screenName.toLowerCase().indexOf( t_filter.text.toLowerCase() ) != -1 )
        		{
        			return( true );
        		}
        		
        		if( user.description.toLowerCase().indexOf( t_filter.text.toLowerCase() ) != -1 )
        		{
        			return( true );
        		}
        		
        		if( user.location.toLowerCase().indexOf( t_filter.text.toLowerCase() ) != -1 )
        		{
        			return( true );
        		}
        		
        		if( user.name.toLowerCase().indexOf( t_filter.text.toLowerCase() ) != -1 )
        		{
        			return( true );
        		}
        		
        		return( false );
            }
			
		]]>
	</mx:Script>
		
	<mx:Box width="100%" height="100%" minHeight="100">
		
		<mx:LinkBar dataProvider="{vs_friendsFollowers}" width="100%" paddingLeft="5" />
		
		<mx:Box width="100%" paddingLeft="5" paddingRight="5">
		
			<flexlib:PromptingTextInput id="t_filter" width="100%" prompt="filter by name, username, location, or description" change="filterData(event)" />
			
		</mx:Box>
		
		<mx:ViewStack id="vs_friendsFollowers" width="100%" height="100%" resizeToContent="true">
			
			<mx:Box id="b_friends" width="100%" height="100%" label="Following(0)">
			
				<mx:List id="dg_friends" width="100%" height="100%" dataProvider="{_friends}" variableRowHeight="true" 
					itemRenderer="com.gen6.toro.view.components.FriendItemRenderer"
					alternatingItemColors="[#fafafa, #fafafa]" paddingBottom="0" paddingTop="0" />
			
			</mx:Box>
			
			<mx:Box id="b_followers" width="100%" height="100%" label="Followers(0)">
			
				<mx:List id="dg_followers" width="100%" height="100%" dataProvider="{_followers}" variableRowHeight="true" 
					itemRenderer="com.gen6.toro.view.components.FriendItemRenderer"
					alternatingItemColors="[#fafafa, #fafafa]" paddingBottom="0" paddingTop="0" />
			
			</mx:Box>
		
		</mx:ViewStack>
			
	</mx:Box>
	
</mx:Box>